{
	"info": {
		"_postman_id": "369b3645-e8fa-4eff-8366-47184bd3df63",
		"name": "API tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Set Environment",
			"item": [
				{
					"name": "Admin auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "350d2dc2-27a1-46d5-82bf-9584b77617f0",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"admin_token\", jsonData.token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"admin\",\n\t\t\"password\": \"admin\"\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:4000/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6158a90a-6a01-4148-afbb-d7f9657aebe4",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"employee_id\", jsonData.user);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "session_jwt",
								"type": "text",
								"value": "{{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t\t\"username\": \"employee\",\n\t\t\"email\": \"employee@employee.com\",\n\t\t\"password\": \"employee\",\n\t\t\"roleid\": \"1\"\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6158a90a-6a01-4148-afbb-d7f9657aebe4",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "session_jwt",
								"type": "text",
								"value": "{{admin_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t\t\"username\": \"manager\",\n\t\t\"email\": \"manager@manager.com\",\n\t\t\"password\": \"manager\",\n\t\t\"roleid\": \"2\"\n\t}\n}"
						},
						"url": {
							"raw": "http://localhost:4000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "auth & get",
					"item": [
						{
							"name": "Employee auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.token).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"employee_token\", jsonData.token);",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"employee_id\", jsonData.user);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"employee\",\n\t\t\"password\": \"employee\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2869598f-c505-4f7b-99b7-356f00801a4a",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"employee@employee.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"employee\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "employee clock",
					"item": [
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.test(\"time_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.time).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"status_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 09:42:27\",\n\t\t\"status\": true,\n\t\t\"user\": {{employee_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 10:42:27\",\n\t\t\"status\": false,\n\t\t\"user\": {{employee_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f570a36-b77f-4fa8-b1b7-bc8c8de7ad2f",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"time\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.time === \"2019-09-09T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"    ",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.status === true);",
											"    pm.expect(found).not.equal(undefined);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "employee workingtime",
					"item": [
						{
							"name": "Get working time by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5133a99-1533-487a-b61a-f1745c716289",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.start === \"2019-09-10T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.end === \"2019-09-10T10:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"workingtime_id\", jsonData.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{employee_id}}?start=2019-09-09T08:42:27Z&end=2019-09-09T11:42:27Z",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{employee_id}}"
									],
									"query": [
										{
											"key": "start",
											"value": "2019-09-09T08:42:27Z"
										},
										{
											"key": "end",
											"value": "2019-09-09T11:42:27Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get working time by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5d0e902-78f9-472e-84de-d12333c6d3eb",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.start).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.end).to.eql(\"2019-09-09T10:42:27Z\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{employee_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{employee_id}}/{{workingtime_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{employee_id}}",
										"{{workingtime_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update employee",
					"item": [
						{
							"name": "Update username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"employee@employee.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"employee2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{employee_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"username\": \"employee2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"employee2@employee2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"employee2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{employee_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"email\": \"employee2@employee2.com\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"employee2@employee2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"employee2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(1);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{employee_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"password\": \"employee2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{employee_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{employee_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Employee auth verify password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.token).to.not.eql(null);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"employee_token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"employee2\",\n\t\t\"password\": \"employee2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "auth & get",
					"item": [
						{
							"name": "Manager auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_id\", jsonData.user);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager\",\n\t\t\"password\": \"manager\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2869598f-c505-4f7b-99b7-356f00801a4a",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "manager clock",
					"item": [
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.test(\"time_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.time).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"status_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 09:42:27\",\n\t\t\"status\": true,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 10:42:27\",\n\t\t\"status\": false,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f570a36-b77f-4fa8-b1b7-bc8c8de7ad2f",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"time\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.time === \"2019-09-09T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"    ",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.status === true);",
											"    pm.expect(found).not.equal(undefined);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "manager workingtime",
					"item": [
						{
							"name": "Get working time by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5133a99-1533-487a-b61a-f1745c716289",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.start === \"2019-09-10T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.end === \"2019-09-10T10:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"workingtime_id\", jsonData.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}?start=2019-09-09T08:42:27Z&end=2019-09-09T11:42:27Z",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}"
									],
									"query": [
										{
											"key": "start",
											"value": "2019-09-09T08:42:27Z"
										},
										{
											"key": "end",
											"value": "2019-09-09T11:42:27Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get working time by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5d0e902-78f9-472e-84de-d12333c6d3eb",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.start).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.end).to.eql(\"2019-09-09T10:42:27Z\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}/{{workingtime_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}",
										"{{workingtime_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "manager teams workingtime",
					"item": [
						{
							"name": "get employee WT",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "create employee WT",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "update employee WT",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update manager",
					"item": [
						{
							"name": "Update username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"username\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"email\": \"manager2@manager2.com\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manager auth verify password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager2\",\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "SuperManager",
			"item": [
				{
					"name": "auth & get",
					"item": [
						{
							"name": "Manager auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_id\", jsonData.user);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager\",\n\t\t\"password\": \"manager\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2869598f-c505-4f7b-99b7-356f00801a4a",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "supermanager clock",
					"item": [
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.test(\"time_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.time).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"status_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 09:42:27\",\n\t\t\"status\": true,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 10:42:27\",\n\t\t\"status\": false,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f570a36-b77f-4fa8-b1b7-bc8c8de7ad2f",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"time\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.time === \"2019-09-09T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"    ",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.status === true);",
											"    pm.expect(found).not.equal(undefined);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "supermanager workingtime",
					"item": [
						{
							"name": "Get working time by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5133a99-1533-487a-b61a-f1745c716289",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.start === \"2019-09-10T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.end === \"2019-09-10T10:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"workingtime_id\", jsonData.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}?start=2019-09-09T08:42:27Z&end=2019-09-09T11:42:27Z",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}"
									],
									"query": [
										{
											"key": "start",
											"value": "2019-09-09T08:42:27Z"
										},
										{
											"key": "end",
											"value": "2019-09-09T11:42:27Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get working time by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5d0e902-78f9-472e-84de-d12333c6d3eb",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.start).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.end).to.eql(\"2019-09-09T10:42:27Z\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}/{{workingtime_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}",
										"{{workingtime_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update supermanager",
					"item": [
						{
							"name": "Update username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"username\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"email\": \"manager2@manager2.com\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manager auth verify password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager2\",\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "teams",
					"item": [
						{
							"name": "create team",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "update team",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "delete team",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "employees workingtimes",
					"item": [
						{
							"name": "get employee WT",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "create employee WT",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "update employee WT",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "delete employee WT",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "employees update",
					"item": [
						{
							"name": "get all users",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "update user roleid",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Administrator",
			"item": [
				{
					"name": "auth & get",
					"item": [
						{
							"name": "Manager auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_id\", jsonData.user);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager\",\n\t\t\"password\": \"manager\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get current manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2869598f-c505-4f7b-99b7-356f00801a4a",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "admin clock",
					"item": [
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											"",
											"pm.test(\"time_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.time).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"status_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 09:42:27\",\n\t\t\"status\": true,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fa4a837-dcdd-4d41-a3d2-05418bbad590",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"clock\": {\n\t\t\"time\": \"2019-09-09 10:42:27\",\n\t\t\"status\": false,\n\t\t\"user\": {{manager_id}}\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get clock",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f570a36-b77f-4fa8-b1b7-bc8c8de7ad2f",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"time\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.time === \"2019-09-09T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"    ",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.status === true);",
											"    pm.expect(found).not.equal(undefined);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/clocks/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"clocks",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "admin workingtime",
					"item": [
						{
							"name": "Get working time by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c5133a99-1533-487a-b61a-f1745c716289",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.start === \"2019-09-10T09:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    const found = jsonData.data.find(el => el.end === \"2019-09-10T10:42:27Z\");",
											"    pm.expect(found).not.equal(undefined);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"workingtime_id\", jsonData.data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}?start=2019-09-09T08:42:27Z&end=2019-09-09T11:42:27Z",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}"
									],
									"query": [
										{
											"key": "start",
											"value": "2019-09-09T08:42:27Z"
										},
										{
											"key": "end",
											"value": "2019-09-09T11:42:27Z"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get working time by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5d0e902-78f9-472e-84de-d12333c6d3eb",
										"exec": [
											"pm.test(\"Successful GET request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"start_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.start).to.eql(\"2019-09-09T09:42:27Z\");",
											"});",
											"",
											"pm.test(\"end_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.end).to.eql(\"2019-09-09T10:42:27Z\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "session_jwt",
										"value": "{{manager_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:4000/api/workingtimes/{{manager_id}}/{{workingtime_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"workingtimes",
										"{{manager_id}}",
										"{{workingtime_id}}"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "update admin",
					"item": [
						{
							"name": "Update username",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager@manager.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"username\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"email\": \"manager2@manager2.com\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c347d178-9dc2-4f5a-93df-9409d87e44be",
										"exec": [
											"pm.test(\"Successful PUT request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"email_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.email).to.eql(\"manager2@manager2.com\");",
											"});",
											"",
											"pm.test(\"username_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.username).to.eql(\"manager2\");",
											"});",
											"",
											"pm.test(\"role_test\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.roleid).to.eql(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "session_jwt",
										"type": "text",
										"value": "{{manager_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"user\": {\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/api/users/{{manager_id}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"users",
										"{{manager_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Manager auth verify password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67c2d97b-624a-44a0-b337-50985ad16d9c",
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200]);",
											"});",
											"",
											"pm.test(\"status\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.status).to.eql(true);",
											"});",
											"",
											"pm.test(\"token\", function () {",
											"    var jsonData = JSON.parse(responseBody);",
											"    pm.expect(jsonData.data.token).to.not.eql(null);",
											"});",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"pm.environment.set(\"manager_token\", jsonData.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"auth\": {\n\t\t\"username\": \"manager2\",\n\t\t\"password\": \"manager2\"\n\t}\n}"
								},
								"url": {
									"raw": "http://localhost:4000/auth",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"auth"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "accounts",
					"item": [
						{
							"name": "create user",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "get all users",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						},
						{
							"name": "delete user",
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": ""
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}